package io.github.wslxm.springbootplus2.core.utils;import com.baomidou.mybatisplus.core.enums.IEnum;import io.github.wslxm.springbootplus2.core.enums.Base;import java.lang.reflect.Method;/** *  通过枚举的key/code/value 值来获取枚举对象 * * @author 王松 * @mail 1720696548@qq.com * @date 2020/6/20 0020 17:19 */public class EnumUtil {    /**     * 通过code来获得枚举,T代表枚举,书写的公共类  <T extends IEnum>这表达类，表示不确定的东西，像Interface/class     *     * @param <T>       枚举对象的具体值     * @param code      key/code/value 值     * @param enumClass 枚举对象     * @return     */    public static <T extends IEnum<Integer>> T getByCode(Integer code, Class<T> enumClass) {        if (enumClass == null) {            return null;        }        for (T t : enumClass.getEnumConstants()) {            if (code.equals(t.getValue())) {                return t;            }        }        return null;    }    /**     * 反射获取自定义枚举value参数     * @throws Exception     */    public static <E> Integer getValue(E e) {        Class<?> aClass = e.getClass();        try {            Method method = aClass.getMethod("getValue");            Object value = method.invoke(e);            return Integer.parseInt(value + "");        } catch (Exception ex) {            ex.printStackTrace();        }        return null;    }    /**     * 反射获取自定义枚举msg参数     * @throws Exception     */    public static <E> String getMsg(E e) {        Class<?> aClass = e.getClass();        try {            Method method = aClass.getMethod("getMsg");            return method.invoke(e) + "";        } catch (Exception ex) {            ex.printStackTrace();        }        return null;    }    /**     * 测试代码     * <P>     * Base.Disable byCode = EnumUtil.getByCode(1, Base.Disable.class);     * log.info(byCode.getValue() + ":" + byCode.getDesc());     * </P>     * @author ws     * @mail 1720696548@qq.com     * @date 2020/4/26 0026 17:18     */    public static void main(String[] args) {        String desc = EnumUtil.getByCode(0, Base.Disable.class).getDesc();        System.out.println(desc);    }}