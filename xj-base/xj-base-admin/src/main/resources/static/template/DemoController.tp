package {packPath}.{rootModule}.{moduleName}.controller;

import com.baomidou.mybatisplus.core.metadata.IPage;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import {packPath}.{rootModule}.{moduleName}.model.vo.{tableNameUp}VO;
import {packPath}.{rootModule}.{moduleName}.model.dto.{tableNameUp}DTO;
import {packPath}.{rootModule}.{moduleName}.model.query.{tableNameUp}Query;
import {packPath}.{rootModule}.{moduleName}.service.{tableNameUp}Service;
import io.github.wslxm.springbootplus2.core.base.controller.BaseController;
import io.github.wslxm.springbootplus2.core.constant.BaseConstant;
import io.github.wslxm.springbootplus2.core.result.Result;

/**
 * {tableComment} 前端控制器
 *
 * <p>
 * {describe}
 * </p>
 *
 * @author {author}
 * @email {email}
 * @date {date}
 */
@RestController
@RequestMapping(BaseConstant.Uri.API_ADMIN + "/{moduleName}/{tableNameLower}")
public class {tableNameUp}Controller extends BaseController<{tableNameUp}Service> {

{filterCrud}

    /**
     * 列表查询
     *
     * @param query query
     * @return IPage<{tableNameUp}VO>
     */
    @GetMapping(value = "/findPage")
    public Result<IPage<{tableNameUp}VO>> findPage(@ModelAttribute @Validated {tableNameUp}Query query) {
        return Result.success(baseService.findPage(query));
    }

   /**
     * ID查询
     *
     * @param id id
     * @return {tableNameUp}VO
     */
    @GetMapping(value = "/{id}")
    public Result<{tableNameUp}VO> findId(@PathVariable String id) {
        return Result.success(baseService.findId(id));
    }

   /**
     * 添加
     *
     * @param dto dto
     * @return 数据id
     */
    @PostMapping
    public Result<String> insert(@RequestBody @Validated {tableNameUp}DTO dto) {
        return Result.successInsert(baseService.insert(dto));
    }

   /**
     * ID编辑
     *
     * @param id id
     * @param dto dto
     * @return boolean
     */
    @PutMapping(value = "/{id}")
    public Result<Boolean> upd(@PathVariable String id, @RequestBody @Validated {tableNameUp}DTO dto) {
        return Result.successUpdate(baseService.upd(id, dto));
    }

   /**
     * ID删除
     *
     * @param id id
     * @return boolean
     */
    @DeleteMapping(value = "/{id}")
    public Result<Boolean> del(@PathVariable String id) {
        return Result.successDelete(baseService.del(id));
    }
{filterCrud}
}
