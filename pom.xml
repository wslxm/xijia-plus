<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.2.RELEASE</version>
        <relativePath/>
    </parent>

    <modules>
        <module>xj-base</module>      <!-- 核心模块 -->
        <module>xj-starter</module>   <!-- 功能集成 -->
    </modules>

    <groupId>io.github.wslxm</groupId>
    <artifactId>spring-boot-plus2</artifactId>
    <version>2.1.0</version><!--1.0.1-SNAPSHOT -->


    <!--对应名称： 如果不定义名称系统默认为  <name>${groupId}:${artifactId}:${revision}</name> -->
    <name>spring-boot-plus2</name>
    <packaging>pom</packaging>
    <description>Demo project for Spring Boot</description>

    <properties>
        <!--
             架构版本 RELEASE=正式版 SNAPSHOT=开发版(实时刷新jar依赖),
             改版本号修改时请使用全局替换, ${revision} 读取会导致子模块无法单独打包
             spring-boot-plus2/pom.xml + xj-base/pom.xml + xj-server/pom.xml + xj-starter/pom.xml,
         -->
        <revision>2.1.0</revision>
        <!-- 文件拷贝时的编码 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- 编译时的编码 -->
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <!-- jdk 版本-->
        <java.version>1.8</java.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>
        <!-- ================== 编码环境 END ======================= -->

        <!-- 数据源相关 -->
        <mybatis-plus-boot-starter.version>3.5.1</mybatis-plus-boot-starter.version>
        <!--<mybatis-plus-generator.version>3.1.0.tmp</mybatis-plus-generator.version>-->
        <mysql-connector-java.version>8.0.16</mysql-connector-java.version>
        <druid-spring-boot-starter.version>1.2.6</druid-spring-boot-starter.version>
        <druid.version>1.1.22</druid.version>
        <jjwt.version>0.9.1</jjwt.version>
        <!-- 第三方工具支持 -->
        <cglib.version>3.2.4</cglib.version>
        <hutool-all.version>5.8.5</hutool-all.version>
        <commons-lang3.version>3.9</commons-lang3.version>
        <fastjson.version>1.2.61</fastjson.version>
        <!-- 二维码工具 -->
        <google.zxing.javase.version>3.0.0</google.zxing.javase.version>
        <!-- 地理位置工具 -->
        <geodesy.version>1.1.3</geodesy.version>
        <!-- poi excel工具 -->
        <poi.version>3.17</poi.version>
        <poi-ooxml.version>3.17</poi-ooxml.version>
        <poi-ooxml-schemas.version>3.17</poi-ooxml-schemas.version>
    </properties>


    <!-- 统一依赖管理  -->
    <dependencyManagement>
        <dependencies>
            <!--  ================================================  -->
            <!--  ============== 当前架构jar - start  ================  -->
            <!--  ================================================  -->
            <!-- 第三方服务- cord核心包 -->
            <dependency>
                <groupId>io.github.wslxm</groupId>
                <artifactId>xj-base-core</artifactId>
                <version>${revision}</version>
            </dependency>
            <!-- 系统核心代码 -->
            <dependency>
                <groupId>io.github.wslxm</groupId>
                <artifactId>xj-base-admin</artifactId>
                <version>${revision}</version>
            </dependency>
            <!-- 阿里云oss  -->
            <dependency>
                <groupId>io.github.wslxm</groupId>
                <artifactId>xj-aliyun-oss</artifactId>
                <version>${revision}</version>
            </dependency>
            <!-- swagger 接口文档  -->
            <dependency>
                <groupId>io.github.wslxm</groupId>
                <artifactId>xj-swagger2</artifactId>
                <version>${revision}</version>
            </dependency>
            <!-- redis 服务 -->
            <dependency>
                <groupId>io.github.wslxm</groupId>
                <artifactId>xj-redis</artifactId>
                <version>${revision}</version>
            </dependency>
            <!-- websocket 服务 -->
            <dependency>
                <groupId>io.github.wslxm</groupId>
                <artifactId>xj-websocket</artifactId>
                <version>${revision}</version>
            </dependency>
            <!--  ================================================  -->
            <!--  ============== 当前架构jar - end  ================  -->
            <!--  ================================================  -->
            <!--  ================================================  -->
            <!--  ============== 外部jar - start  ================  -->
            <!--  ================================================  -->
            <!-- mybatis-plus  -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus-boot-starter.version}</version>
            </dependency>
            <!-- 代码生成插件 mybatis-plus-generator-->
            <!--<dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-generator</artifactId>
                <version>${mybatis-plus-generator.version}</version>
            </dependency>-->
            <!-- mysql 8.0.16 -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
            </dependency>
            <!-- druid 阿里巴巴数据源 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid-spring-boot-starter.version}</version>
            </dependency>
            <!-- jwt -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <!-- cglib dto转po/vo使用 -->
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib</artifactId>
                <version>${cglib.version}</version>
            </dependency>
            <!-- Hutool是一个小而全的Java工具类库  -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool-all.version}</version>
            </dependency>
            <!-- commons-lang3 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <!-- fastjson -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <!-- 二维码生成需要的包  -->
            <dependency>
                <groupId>com.google.zxing</groupId>
                <artifactId>javase</artifactId>
                <version>${google.zxing.javase.version}</version>
            </dependency>
            <!-- 地理位置工具 -->
            <dependency>
                <groupId>org.gavaghan</groupId>
                <artifactId>geodesy</artifactId>
                <version>${geodesy.version}</version>
            </dependency>
            <!-- excel2003使用的包 -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <!-- excel2007+使用的包 -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml-schemas</artifactId>
                <version>${poi-ooxml-schemas.version}</version>
            </dependency>
            <!--  ================================================  -->
            <!--  ============== 外部jar - end  ==================  -->
            <!--  ================================================  -->
        </dependencies>
    </dependencyManagement>


    <!-- ============================ 打包到中央仓库配置 start ================================  -->
    <!-- =================== 发布命令：mvn clean deploy -P release   =========================   -->
    <!-- =================== 使用管理员身份打开 cmd 执行发布命令        ==========================   -->
    <!-- =================== 弹出GunPG 停止运行不管，直接点回车关闭程序  ==========================  -->
    <!-- 中央仓库配置 -->
    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://s01.oss.sonatype.org/content/repositories/snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <!-- 许可证 -->
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <!-- 源码信息 -->
    <scm>
        <url>https://github.com/wslxm/spring-boot-plus2</url>
        <connection>scm:https://github.com/wslxm/spring-boot-plus2.git</connection>
        <developerConnection>scm:https://github.com/wslxm/spring-boot-plus2.git</developerConnection>
    </scm>

    <!-- 个人信息,对应 gpg 配置 -->
    <developers>
        <developer>
            <name>wangsong</name>
            <email>1720696548@qq.com</email>
            <timezone>+8</timezone>
        </developer>
    </developers>

    <!-- 多环境配置, 发布jar到中央仓库环境配置, 发布时选择 release 环境 -->
    <!--    <profiles>-->
    <!--        <profile>-->
    <!--            <id>release</id>-->

    <!--            &lt;!&ndash;打包配置到中央仓库的统一配置,如果使用该源码开发，请移除&ndash;&gt;-->
    <!--            <build>-->
    <!--                <finalName>${artifactId}-${revision}</finalName>-->
    <!--                <plugins>-->
    <!--                    &lt;!&ndash; java-doc配置 &ndash;&gt;-->
    <!--                    <plugin>-->
    <!--                        <groupId>org.apache.maven.plugins</groupId>-->
    <!--                        <artifactId>maven-javadoc-plugin</artifactId>-->
    <!--                        <version>2.10.4</version>-->
    <!--                        <configuration>-->
    <!--                            <aggregate>true</aggregate>-->
    <!--                        </configuration>-->
    <!--                        <executions>-->
    <!--                            <execution>-->
    <!--                                <id>attach-javadocs</id>-->
    <!--                                <goals>-->
    <!--                                    <goal>jar</goal>-->
    <!--                                </goals>-->
    <!--                                <configuration>&lt;!&ndash; add this to disable checking &ndash;&gt;-->
    <!--                                    <additionalparam>-Xdoclint:none</additionalparam>-->
    <!--                                </configuration>-->
    <!--                            </execution>-->
    <!--                        </executions>-->
    <!--                    </plugin>-->
    <!--                    &lt;!&ndash;使用source 进行jar打包&ndash;&gt;-->
    <!--                    <plugin>-->
    <!--                        <groupId>org.apache.maven.plugins</groupId>-->
    <!--                        <artifactId>maven-source-plugin</artifactId>-->
    <!--                        <version>3.0.1</version>-->
    <!--                        <executions>-->
    <!--                            <execution>-->
    <!--                                <id>attach-sources</id>-->
    <!--                                <goals>-->
    <!--                                    <goal>jar-no-fork</goal>-->
    <!--                                </goals>-->
    <!--                            </execution>-->
    <!--                        </executions>-->
    <!--                    </plugin>-->
    <!--                    &lt;!&ndash; gpg 配置 &ndash;&gt;-->
    <!--                    <plugin>-->
    <!--                        <groupId>org.apache.maven.plugins</groupId>-->
    <!--                        <artifactId>maven-gpg-plugin</artifactId>-->
    <!--                        <version>1.6</version>-->
    <!--                        <executions>-->
    <!--                            <execution>-->
    <!--                                <id>sign-artifacts</id>-->
    <!--                                <phase>verify</phase>-->
    <!--                                <goals>-->
    <!--                                    <goal>sign</goal>-->
    <!--                                </goals>-->
    <!--                            </execution>-->
    <!--                        </executions>-->
    <!--                    </plugin>-->
    <!--                </plugins>-->
    <!--            </build>-->
    <!--        </profile>-->
    <!--    </profiles>-->
    <!-- ========================== 打包到中央仓库配置 end ==========================  -->
</project>
